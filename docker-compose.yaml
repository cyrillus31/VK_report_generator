version: '3.8'
services:
  api:
    env_file: .env
    ports:
        - '8000:8000'
    volumes:
      - ./app:/app
    build: 
      context: .
      dockerfile: Dockerfile.dev.app
    command: alembic revision --autogenerate -m 'initial'; touch DELETE_THIS_FILE;
    depends_on:
      database:
        condition: service_healthy
      celery:
        condition: service_started 
    restart: always

  celery:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile.celery
    environment:
      TZ: Europe/Moscow
    volumes:
      - ./app:/app
    depends_on:
      rabbit:
        condition: service_healthy
    restart: always

  rabbit:
    env_file: .env
    image: rabbitmq:3-alpine
    expose:
      - "5672"
    environment:
      TZ: Europe/Moscow
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 10 
    restart: always

  database:
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: related_users
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    image: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 10s
      retries: 10
        # volumes:
        #   - database_volume:/var/lib/postgresql/data
    restart: always

volumes:
  shared_volume:
  database_volume:

